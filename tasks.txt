Найдите коммит, в котором в файле index.html был добавлен фрагмент class="fw-lighter" в строку 34 (используйте команду git blame)

Перейдите в отдельную ветку (имя ветки придумайте самостоятельно)

Отмените изменения, выполненные именно в данном коммите. Для этого используйте команду git revert commit

Опишите суть изменений в сообщении коммита (в открывшемся редакторе vim)

Просмотрите получившийся коммит и изменения в нём

Отправьте этот коммит в свой репозиторий

   0.097 git blame
  26     1:08.638 git blame index.html
  27        0.104 git checkout -b new_branch
  28     1:23.107 git revert d014a17c
  29     1:04.060 git log --oneline --graph --all
  30     2:36.648 git diff 8897d25 6bc2662
  31        0.293 git push -u origin task_1
  32        0.080 git remote -v
  33        0.082 git push
  34        2.359 git push -u origin new_branch

  https://ru.stackoverflow.com/questions/437331/%D0%97%D0%B0%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B4%D0%B5%D1%84%D0%BE%D0%BB%D1%82%D0%BD%D0%BE%D0%B3%D0%BE-%D1%80%D0%B5%D0%B4%D0%B0%D0%BA%D1%82%D0%BE%D1%80%D0%B0-%D0%BA%D0%BE%D0%B4%D0%B0-%D0%B2-git

Откройте файл index.html в браузере, ознакомьтесь с функционалом веб-страницы
Найдите коммит, в котором была удалена функция подсчёта количества слов (countWords в файле main.js)
Создайте новую ветку. Название ветки придумайте самостоятельно
В новой ветке верните обратно весь функционал подсчёта количества слов, используя команду git revert commit
Убедитесь в браузере, что функционал заработал: введите в поле текст, нажмите кнопку “Посчитать” и убедитесь в том, что количество слов стало считаться
Отправьте изменения в текущей ветке в удалённый репозиторий
Влейте эти изменения и изменения из предыдущего задания в ветку master, и также отправьте в удалённый репозиторий
Зайдите в удалённый репозиторий и просмотрите историю коммитов
1:10.731 git blame main.js
  38       46.037 git log --oneline --graph --all
  39        0.098 git checkout -b task3
  40       21.511 git revert c7e2f24
  41        7.375 git revert 560a300
  42       39.030 git log --oneline --graph --all
  43        2.277 git push -u origin task3
  44        0.109 git checkout master
  45        0.172 git merge task3
  46       49.420 git log --oneline --graph --all
  47        0.090 git merge new_branch
  48       22.323 git log --oneline --graph --all
  49        2.483 git push --all

В репозитории есть папка logs для хранения логов. И также есть файл .gitkeep, предназначенный для того, чтобы директория хранилась 
в репозитории
Выполняйте задание в ветке master
Удалите файлы логов из репозитория и из отслеживания (git rm --cached)
Добавьте их в файл .gitignore таким образом, чтобы папка и файл .gitkeep не пропали из репозитория, 
но новые файлы логов с любыми именами не отслеживались Git-ом
Закоммитьте изменения и отправьте их в свой репозиторий

0.097 git rm --cached logs\access.log
  52        0.083 git rm --cached logs\error.log
  53        0.079 git status
  54        0.074 git status
  55        0.072 git status
  56        0.087 git add .
  57        0.169 git commit -m 'removed logs'
  58        2.371 git push

  https://gitextensions.github.io/ - одно из приложений для управления репозиториями. Бывают разные

  1. Просмотрите историю коммитов в своём проекте и выберите три случайных коммита. Просмотрите изменения, которые были в них сделаны.

2. Сделайте отдельную ветку для работы


3. Верните эти изменения командой git revert последовательно, чтобы в итоге получилось тоже три коммита в новой ветке.

4. Напишите git log --oneline --graph --all Результат прикрепите к комментарию к ДЗ

5. Попробуйте отменить эти три коммита:
* последний — командами git reset --soft и git restore;
* предпоследний — командой git reset --mixed и git restore;
* первый — командой git reset --hard.

6. Отправьте ссылку на этот реопзиторий